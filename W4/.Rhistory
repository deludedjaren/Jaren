# Load package tidyverse
library(tidyverse)
# Load package tidyverse
library(tidyverse)
# Load package tidyverse
load(tidyverse)
# Load package tidyverse
library("tidyverse")
# Load package tidyverse
library("tidyverse")
# Load package tidyverse
library(tidyverse)
library(tidyverse)
installed.packages(tidyverse)
installed.packages("tidyverse")
# Load package tidyverse
library(tidyverse)
installed.packages("tidyverse")
# Load package tidyverse
library(tidyverse)
# Read data from the hotels.csv file and assign it to a variable named, "hotels"
hotels <- read_csv("hotels.csv")
# Read data from the hotels.csv file and assign it to a variable named, "hotels"
hotels <- read.csv("hotels.csv")
install.packages("tidyverse")
# Load package tidyverse
library(tidyverse)
# Read data from the hotels.csv file and assign it to a variable named, "hotels"
hotels <- read.csv("hotels.csv")
# Enter code here
names(hotels)
# Enter code here
glimpse(hotels)
# Enter code here
select(hotels,lead_time)
# Enter code here
select(hotel,lead_time,agent,market_segment)
# Enter code here
select(hotels,lead_time,agent,market_segment)
# Enter code here
arrange(hotels, lead_time)
knitr::opts_chunk$set(echo = TRUE)
# Enter code here
comm_data <- read.csv("CommQuest2023_Larger.csv")
# Enter code here
new_data <- comm_data %>%
select(date, channel, message)
print(new_data)
# Enter code here
filter_data <- comm_data %>%
filter(channel == "Twitter", date == as.Date("2023-08-02"))
print(filter_data)
# Enter code here
twit_aug <- comm_data %>%
filter(channel == "Twitter", date == as.Date("2023-08-02"))
print(twit_aug)
# Enter code here
ascending <- comm_data %>%
arrange(date)
print(ascending)
# Enter code here
senders <- comm_data %>%
distinct(sender)
print(senders)
# Enter code here
message_data <- comm_data %>%
group_by(sender) %>%
count()
print(message_data)
# Enter code here
message_count <- comm_data %>%
group_by(sender) %>%
count()
print(message_count)
# Enter code here
channel_count <- comm_data %>%
group_by(channel) %>%
count()
print(channel_count)
# Enter code here
top_senders <- comm_data %>%
filter(sentiment > 0) %>%
select(sender, sentiment) %>%
group_by(sender) %>%
summarize(average_sentiment = mean(sentiment)) %>%
arrange(desc(average_sentiment)) %>%
slice(1:3)
print(top_senders)
# Enter code here
top_senders <- comm_data %>%
filter(sentiment > 0) %>%
select(sender, sentiment) %>%
group_by(sender) %>%
summarize(average_sentiment = mean(sentiment)) %>%
arrange(desc(average_sentiment)) %>%
slice(1:3)
top_senders
# Enter code here
best_senders <- comm_data %>%
filter(sentiment > 0) %>%
select(sender, sentiment) %>%
group_by(sender) %>%
summarize(average_sentiment = mean(sentiment)) %>%
arrange(desc(average_sentiment)) %>%
slice(1:3)
best_senders
# Enter code here
average_sentiment <- comm_data %>%
group_by(date) %>%
summarize(average_sentiment = mean(sentiment)) %>%
arrange(date)
print(average_sentiment)
# Enter code here
negative_sentiment <- comm_data %>%
filter (sentiment < 0) %>%
select(date, channel, message, sentiment)
negative_sentiment
# Enter code here
negative_sentiment <- comm_data %>%
filter (sentiment < 0) %>%
select(date, channel, message, sentiment)
arrange(sentiment)
# Enter code here
negative_sentiment <- comm_data %>%
filter (sentiment < 0) %>%
select(date, channel, message, sentiment)
negative_sentiment
# Enter code here
negative_sentiment <- comm_data %>%
filter (sentiment < 0) %>%
select(date, channel, message, sentiment)
arrange(date)
# Enter code here
negative_sentiment <- comm_data %>%
filter (sentiment < 0) %>%
select(date, channel, message, sentiment),
# Enter code here
negative_sentiment <- comm_data %>%
filter (sentiment < 0) %>%
select(date, channel, message, sentiment) %>%
arrange(sentiment)
negative_sentiment
# Enter code here
negative_sentiment <- comm_data %>%
filter (sentiment < 0) %>%
select(date, channel, message, sentiment) %>%
arrange(sentiment, desc(sentiment))
negative_sentiment
# Enter code here
negative_sentiment <- comm_data %>%
filter (sentiment < 0) %>%
select(date, channel, message, sentiment)
negative_sentiment
# Enter code here
sentiment_label <- comm_data %>%
mutate(sentiment_label = case_when(
sentiment > 0 ~ "Positive",
sentiment == 0 ~ "Neutral",
sentiment < 0 ~ "Negative"))
print(sentiment_label)
# Enter code here
sentimentofproduct <- comm_data %>%
mutate(product_sentiment_score_and_length = sentiment * nchar(message)) %>%
arrange(desc(product_sentiment_length))
# Enter code here
sentimentofproduct <- comm_data %>%
mutate(product_sentiment_score_and_length = sentiment * nchar(message)) %>%
arrange(desc(product_sentiment_score_and_length))
sentimentofproduct
# Enter code here
no_of_char <- comm_data %>%
group_by(date) %>%
summarise(no_of_char = nchar(message)) %>%
arrange(no_of_char)
no_of_char
# Enter code here
no_of_char <- comm_data %>%
group_by(date) %>%
summarise(no_of_char = sum(message)) %>%
arrange(desc(no_of_char))
# Enter code here
no_of_char <- comm_data %>%
group_by(date) %>%
summarise(no_of_char = sum(nchar(message))) %>%
arrange(desc(no_of_char))
no_of_char
knitr::opts_chunk$set(echo = TRUE)
# Enter code here
comm_data <- read.csv("CommQuest2023_Larger.csv")
# Enter code here
new_data <- comm_data %>%
select(date, channel, message)
print(new_data)
# Enter code here
twit_aug <- comm_data %>%
filter(channel == "Twitter", date == as.Date("2023-08-02"))
print(twit_aug)
# Enter code here
ascending <- comm_data %>%
arrange(date)
print(ascending)
# Enter code here
senders <- comm_data %>%
distinct(sender)
print(senders)
# Enter code here
message_count <- comm_data %>%
group_by(sender) %>%
count()
print(message_count)
# Enter code here
channel_count <- comm_data %>%
group_by(channel) %>%
count()
print(channel_count)
# Enter code here
best_senders <- comm_data %>%
filter(sentiment > 0) %>%
select(sender, sentiment) %>%
group_by(sender) %>%
summarize(average_sentiment = mean(sentiment)) %>%
arrange(desc(average_sentiment)) %>%
slice(1:3)
best_senders
# Enter code here
average_sentiment <- comm_data %>%
group_by(date) %>%
summarize(average_sentiment = mean(sentiment)) %>%
arrange(date)
print(average_sentiment)
# Enter code here
negative_sentiment <- comm_data %>%
filter (sentiment < 0) %>%
select(date, channel, message, sentiment)
negative_sentiment
# Enter code here
sentiment_label <- comm_data %>%
mutate(sentiment_label = case_when(
sentiment > 0 ~ "Positive",
sentiment == 0 ~ "Neutral",
sentiment < 0 ~ "Negative"))
print(sentiment_label)
# Enter code here
sentimentofproduct <- comm_data %>%
mutate(product_sentiment_score_and_length = sentiment * nchar(message)) %>%
arrange(desc(product_sentiment_score_and_length))
sentimentofproduct
# Enter code here
no_of_char <- comm_data %>%
group_by(date) %>%
summarise(no_of_char = sum(nchar(message))) %>%
arrange(desc(no_of_char))
no_of_char
# Enter code here
new_data <- comm_data %>%
select(date, channel, message)
print(new_data)
# Enter code here
comm_data <- read.csv("CommQuest2023_Larger.csv")
library(dplyr)
# Enter code here
no_of_char <- comm_data %>%
group_by(date) %>%
summarise(no_of_char = sum(nchar(message))) %>%
arrange(desc(no_of_char))
head(1)
no_of_char
# Enter code here
no_of_char <- comm_data %>%
group_by(date) %>%
summarise(no_of_char = sum(nchar(message))) %>%
arrange(desc(no_of_char)) %>%
head(1)
no_of_char
